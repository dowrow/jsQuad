{"name":"jsQuad","tagline":" Library for quadratic bezier curves management in JavaScript","body":"jsQuad\r\n======\r\n\r\n Library for quadratic bezier curves management in JavaScript.\r\n\r\nHow to use jsQuad\r\n=================\r\n\r\njsQuad works with 2D Point objects in the following format:\r\n\t\t\t\t\r\n\t{\r\n\t\tx: 0,\r\n\t\ty: 1\r\n\t}\r\n\r\nAnd with bezier curves in the following format (as an array of 3 anchor points):\r\n\r\n\t[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}]\r\n\t\t\r\njsQuad has two main methods.\r\nThe first one returns an array of smooth bezier curves (spline) given points:\r\n\t\t\t\r\n\tjsQuad.getCurves (arrayOfPoints);\r\n\t\t\t\r\nThe second one returns a point given a curve and a time t [0, 1]:\r\n\r\n\tjsQuad.pointOnCurve(curve, t);\r\n\r\nUtils\r\n=====\r\n\r\nAt the moment jsQuad only provides a helper method:\r\n\r\nThis method returns the euclidean distance between two Point objects:\r\n \t\t\r\n\tjsQuad.util.distance(a, b);\r\n \t\t\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}